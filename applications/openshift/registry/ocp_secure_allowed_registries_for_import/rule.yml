documentation_complete: true

prodtype: ocp4

title: "Check configured allowed registries for import uses secure protocol"

description: |-
    The configuration <tt>allowedRegistriesForImport</tt> limits the container
    image registries from which normal users may import images. This is a list
    of the registries that can be trusted to contain valid images and the image
    location configured is assumed to be secured unless configured otherwise. It
    is important to allow only secure registries to avoid man in the middle attacks,
    as the insecure image import request can be impersonated and could lead to
    fetching malicious content.

rationale: |-
    Configured list of allowed registries for import should be from the secure source.

severity: medium

identifiers:
  cce@ocp4: CCE-86235-9,CCE-86323-3

references:
    nist: CM-7(2),CM-7(4),CM-7(5),CM-11
    srg: SRG-APP-000014-CTR-000035

ocil_clause: 'allowedRegistriesForImport is configured with insecure option for image access'

ocil: |-
    <b>Audit:</b>

    To check for the configured allowedRegistriesForImport with insecure option use below command:
    <tt>$ oc get image.config.openshift.io/cluster -ojsonpath='{.spec.allowedRegistriesForImport}'</tt>
    The output lists the configured allowedRegistriesForImport and the insecure option used.

    <b>Remediation:</b>
    To edit or remove configured allowedRegistriesForImport with insecure option use below command:
    <tt>$ oc edit image.config.openshift.io/cluster</tt>
    Edit or remove any registries where insecure is set to true.

    Refer to https://docs.openshift.com/container-platform/latest/openshift_images/image-configuration.html
    for more details on configuring registries in OpenShift

warnings:
    - general: |-
        {{{ openshift_cluster_setting("/apis/config.openshift.io/v1/images/cluster") | indent(8) }}}

#template:
#    name: yamlfile_value
#    vars:
#        ocp_data: 'true'
#        filepath: /apis/config.openshift.io/v1/images/cluster
#        yamlpath: ".spec.allowedRegistriesForImport[:].insecure"
#        entity_check: "at least one"
#        values:
#            - value: "true"
#              type: "boolean"
#              operation: "equals"
