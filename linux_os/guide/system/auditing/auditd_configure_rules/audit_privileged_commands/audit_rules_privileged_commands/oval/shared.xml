<def-group>
  <definition class="compliance" id="{{{ rule_id }}}" version="1">
    {{{ oval_metadata("Audit rules about the information on the use of privileged commands are enabled.") }}}
    <criteria operator="OR">
      <criteria operator="AND">
        <extend_definition definition_ref="audit_rules_augenrules"
          comment="audit augenrules format is used"/>
        <criterion test_ref="test_augenrules_all_priv_cmds_covered"
          comment="augenrules cover all privileged commands on the system"/>
        <criterion test_ref="test_augenrules_count_matches_system_priv_cmds"
          comment="count of augenrules for priv cmds matches count of priv cmds in the system"/>
      </criteria>

      <criteria operator="AND">
        <extend_definition definition_ref="audit_rules_auditctl"
          comment="audit auditctl format is used"/>
        <criterion test_ref="test_auditctl_all_priv_cmds_covered"
          comment="auditctl covers all privileged commands on the system"/>
        <criterion test_ref="test_auditctl_count_matches_system_priv_cmds"
          comment="count of auditctl for priv cmds matches count of priv cmds in the system"/>
      </criteria>
    </criteria>
  </definition>

  <!-- First define OVAL entities that can be reused across tests below -->
  <unix:file_state id="state_setuid_or_setgid_set" version="1" operator="OR">
    <unix:suid datatype="boolean">true</unix:suid>
    <unix:sgid datatype="boolean">true</unix:sgid>
  </unix:file_state>

  <unix:file_state id="state_dev_proc_sys_dirs" version="1">
    <unix:filepath operation="pattern match">^\/(dev|proc|sys)\/.*$</unix:filepath>
  </unix:file_state>

  <!-- augenrules -->
  <unix:file_object id="object_audit_rules_privileged_commands" version="1"
    comment="files with setuid or setgid permission set">
    <unix:behaviors recurse="directories" recurse_direction="down"
      recurse_file_system="local" max_depth="-1"/>
    <unix:path operation="equals">/</unix:path>
    <!-- [a-z]+ regex below is a workaround for OpenSCAP https://fedorahosted.org/openscap/ticket/457 bug -->
    <unix:filename operation="pattern match">[a-z]+</unix:filename>
    <filter action="include">state_setuid_or_setgid_set</filter>
    <filter action="exclude">state_dev_proc_sys_dirs</filter>
  </unix:file_object>

  <local_variable id="var_audit_rules_privileged_commands_priv_cmds" version="1"
    datatype="string" comment="Filepath of all privileged commands found in the system">
    <object_component item_field="filepath" object_ref="object_audit_rules_privileged_commands"/>
  </local_variable>

  <local_variable id="var_audit_rules_privileged_commands_priv_cmds_count" version="1"
    datatype="int" comment="Count all privileged commands present in the system">
    <count>
      <object_component item_field="filepath"
      object_ref="object_audit_rules_privileged_commands"/>
    </count>
  </local_variable>

  <ind:variable_object id="object_audit_rules_privileged_commands_priv_cmds_count" version="1"
    comment="Number of all privileged commands in the system, regardless of audit rules.">
    <ind:var_ref>var_audit_rules_privileged_commands_priv_cmds_count</ind:var_ref>
  </ind:variable_object>

  <!-- The intention of the first test is to ensure that exists at one rule for each privileged
    command found in the system. Therefore, a list of objects will be extracted from auditd rules
    and compared to the previous object. -->
  <ind:textfilecontent54_state id="state_not_relevant_cmds" version="1">
    <ind:subexpression datatype="string" operation="not equal" var_check="all"
      var_ref="var_audit_rules_privileged_commands_priv_cmds"/>
  </ind:textfilecontent54_state>

  <ind:textfilecontent54_object id="object_priv_cmds_from_augenrules" version="1">
    <ind:filepath operation="pattern match">^/etc/audit/rules\.d/.*\.rules$</ind:filepath>
    <ind:pattern operation="pattern match">^[\s]*-a always,exit (?:-F path=([\S]+) )+-F auid>={{{ auid }}} -F auid!=(?:4294967295|unset)[\s]+(?:-k[\s]+|-F[\s]+key=)[\S]+[\s]*$</ind:pattern>
    <ind:instance operation="greater than or equal" datatype="int">1</ind:instance>
    <filter action="exclude">state_not_relevant_cmds</filter>
  </ind:textfilecontent54_object>

  <ind:textfilecontent54_state id="state_priv_cmds_from_system" version="1">
    <ind:subexpression datatype="string" operation="pattern match" var_check="at least one"
      var_ref="var_audit_rules_privileged_commands_priv_cmds"/>
  </ind:textfilecontent54_state>

  <ind:textfilecontent54_test id="test_augenrules_all_priv_cmds_covered" version="1"
    check="all" check_existence="all_exist"
    comment="There is one augenrules rule for each privileged command on the system.">
    <ind:object object_ref="object_priv_cmds_from_augenrules" />
    <ind:state state_ref="state_priv_cmds_from_system" />
  </ind:textfilecontent54_test>

  <local_variable id="var_priv_cmds_from_augenrules_count" version="1"
    datatype="int" comment="Count privileged commands found in audit rules in augenrules format">
    <count>
      <object_component item_field="subexpression" object_ref="object_priv_cmds_from_augenrules"/>
    </count>
  </local_variable>

  <ind:variable_state id="state_priv_cmds_from_augenrules_count" version="1">
    <ind:value datatype="int" operation="equals" var_check="at least one"
      var_ref="var_priv_cmds_from_augenrules_count"/>
  </ind:variable_state>

  <ind:variable_test id="test_augenrules_count_matches_system_priv_cmds" version="1"
    check="all" check_existence="all_exist"
    comment="Count of augenrules for priv cmds matches the count of priv cmds in the system">
    <ind:object object_ref="object_audit_rules_privileged_commands_priv_cmds_count"/>
    <ind:state state_ref="state_priv_cmds_from_augenrules_count"/>
  </ind:variable_test>

  <!-- auditctl -->
  <ind:textfilecontent54_object id="object_priv_cmds_from_auditctl" version="1">
    <ind:filepath>/etc/audit/audit.rules</ind:filepath>
    <ind:pattern operation="pattern match">^[\s]*-a always,exit (?:-F path=([\S]+) )+-F auid>={{{ auid }}} -F auid!=(?:4294967295|unset)[\s]+(?:-k[\s]+|-F[\s]+key=)[\S]+[\s]*$</ind:pattern>
    <ind:instance operation="greater than or equal" datatype="int">1</ind:instance>
    <filter action="exclude">state_not_relevant_cmds</filter>
  </ind:textfilecontent54_object>

  <ind:textfilecontent54_test id="test_auditctl_all_priv_cmds_covered" version="1"
    check="all" check_existence="all_exist"
    comment="There is one auditctl rule for each privileged command on the system.">
    <ind:object object_ref="object_priv_cmds_from_auditctl"/>
    <ind:state state_ref="state_priv_cmds_from_system"/>
  </ind:textfilecontent54_test>

  <local_variable id="var_priv_cmds_from_auditctl_count" version="1"
    datatype="int" comment="Count privileged commands found in audit rules in auditctl format">
    <count>
      <object_component object_ref="object_priv_cmds_from_auditctl" item_field="subexpression"/>
    </count>
  </local_variable>

  <ind:variable_state id="state_priv_cmds_from_auditctl_count" version="1">
    <ind:value datatype="int" operation="equals" var_check="at least one"
      var_ref="var_priv_cmds_from_auditctl_count"/>
  </ind:variable_state>

  <ind:variable_test id="test_auditctl_count_matches_system_priv_cmds" version="1"
    check="all" check_existence="all_exist"
    comment="Count of auditctl rules for priv cmds matches the count of priv cmds in the system">
    <ind:object object_ref="object_audit_rules_privileged_commands_priv_cmds_count" />
    <ind:state state_ref="state_priv_cmds_from_auditctl_count" />
  </ind:variable_test>
</def-group>
