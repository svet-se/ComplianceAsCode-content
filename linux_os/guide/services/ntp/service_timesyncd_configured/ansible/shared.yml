# platform = multi_platform_sle
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
{{{ ansible_instantiate_variables("var_multiple_time_servers") }}}

preferred_ntp_servers: '{{ var_multiple_time_servers.split(",").slice(2)[0].join("," }}'
fallback_ntp_servers: '{{ var_multiple_time_servers.split(",").slice(2)[1].join("," }}'

- name: {{{ rule_title }}} - Add missing / update wrong records for NTP servers
  ansible.builtin.lineinfile:
    path: /etc/systemd/timesyncd.d/oscap-remedy.conf
    regexp: '^\s*NTP\s*='
    state: present
    line: 'NTP={{ preferred_ntp_servers }}'
    create: true

- name: {{{ rule_title }}} - Add missing / update wrong records for fallback servers
  ansible.builtin.lineinfile:
    path: /etc/systemd/timesyncd.d/oscap-remedy.conf
    regexp: '^\s*FallbackNTP\s*='
    state: present
    line: 'FallbackNTP={{ fallback_ntp_servers }}'
    create: true

- name: {{{ rule_title }}} - Add missing / update wrong records for root distance
  ansible.builtin.lineinfile:
    path: /etc/systemd/timesyncd.d/oscap-remedy.conf
    regexp: '^\s*RootDistanceMax\s*='
    state: present
    line: 'RootDistanceMax=1'
    create: true
 
