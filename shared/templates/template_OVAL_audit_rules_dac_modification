<def-group>
  <definition class="compliance" id="audit_rules_dac_modification_%ATTR%" version="1">
    <metadata>
      <title>Audit Discretionary Access Control Modification Events - %ATTR%</title>
      <affected family="unix">
        <platform>multi_platform_rhel</platform>
      </affected>
      <description>The changing of file permissions and attributes should be audited.</description>
    </metadata>

{{% if product == "rhel6" %}}
    <!-- x32 system calls are monitored and ... -->
    <criteria operator="AND">
      <criterion comment="dac modification %ATTR% x32" test_ref="test_audit_rules_dac_modification_%ATTR%_x32" />
      <!-- system is not x64 or x64 system calls are monitored  -->
      <criteria operator="OR">
        <extend_definition comment="x64?" definition_ref="system_info_architecture_64bit" negate="true" />
        <criterion comment="dac modification %ATTR% x64" test_ref="test_audit_rules_dac_modification_%ATTR%_x64" />
      </criteria>
    </criteria>
{{% else %}}
    <criteria operator="OR">

      <!-- Test the augenrules case -->
      <criteria operator="AND">
        <extend_definition comment="audit augenrules" definition_ref="audit_rules_augenrules" />
        <criterion comment="audit augenrules 32-bit %ATTR%" test_ref="test_32bit_ardm_%ATTR%_augenrules" />
        <criteria operator="OR">
          <!-- System either isn't 64-bit => we just check presence of 32-bit version of %ATTR% audit DAC rule -->
          <extend_definition comment="64-bit system" definition_ref="system_info_architecture_64bit" negate="true" />
          <!-- Or system is 64-bit => in that case we also need to verify the presence of 64-bit version of %ATTR% audit DAC rule -->
          <criterion comment="audit augenrules 64-bit %ATTR%" test_ref="test_64bit_ardm_%ATTR%_augenrules" />
        </criteria>
      </criteria>

      <!-- OR test the auditctl case -->
      <criteria operator="AND">
        <extend_definition comment="audit auditctl" definition_ref="audit_rules_auditctl" />
        <criterion comment="audit auditctl 32-bit %ATTR%" test_ref="test_32bit_ardm_%ATTR%_auditctl" />
        <criteria operator="OR">
          <!-- System either isn't 64-bit => we just check presence of 32-bit version of %ATTR% audit DAC rule -->
          <extend_definition comment="64-bit system" definition_ref="system_info_architecture_64bit" negate="true" />
          <!-- Or system is 64-bit => in that case we also need to verify the presence of 64-bit version of %ATTR% audit DAC rule -->
          <criterion comment="audit auditctl 64-bit %ATTR%" test_ref="test_64bit_ardm_%ATTR%_auditctl" />
        </criteria>
      </criteria>
    </criteria>
{{% endif %}}
  </definition>

{{% if product == "rhel6" %}}
  <ind:textfilecontent54_test check="all" comment="dac modification %ATTR% x32" id="test_audit_rules_dac_modification_%ATTR%_x32" version="1">
    <ind:object object_ref="object_audit_rules_dac_modification_%ATTR%_x32" />
  </ind:textfilecontent54_test>
  <ind:textfilecontent54_object id="object_audit_rules_dac_modification_%ATTR%_x32" version="1">
    <ind:filepath>/etc/audit/audit.rules</ind:filepath>
    <!-- What's going on here?
         Ensure we have both exit and always in the action list
         Syscall numbers between x64/x32 dont always line up so split them by
           arch.  Remember that we can still have x32 libs on x64
         Watch for the %ATTR% syscall.
         Assume user id's start above 500 and watch for %ATTR%s by them
         Watch for %ATTR%s by users without a set loginuid (4294967295/-1)
         Ensure that a key is defined for it but we aren't especially concerned
           with what it is
         Some regex foo to account for various ways this could be defined.

         A typical pattern would be:
         -a always,exit -F arch=b32 -S %ATTR% -F auid>=500 -F auid!=4294967295 -k perms
    -->
    <ind:pattern operation="pattern match">^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*-S[\s]+%ATTR%[\s]+)(?:.*-F\s+auid>=500[\s]+)(?:.*-F\s+auid!=4294967295[\s]+).*-k[\s]+[\S]+[\s]*$</ind:pattern>
    <ind:instance datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>

  <ind:textfilecontent54_test check="all" comment="dac modification %ATTR% x64" id="test_audit_rules_dac_modification_%ATTR%_x64" version="1">
    <ind:object object_ref="object_audit_rules_dac_modification_%ATTR%_x64" />
  </ind:textfilecontent54_test>
  <ind:textfilecontent54_object id="object_audit_rules_dac_modification_%ATTR%_x64" version="1">
    <ind:filepath>/etc/audit/audit.rules</ind:filepath>
    <!-- What's going on here?
         Ensure we have both exit and always in the action list
         Syscall numbers between x64/x32 dont always line up so split them by
           arch. Remember that we can still have x32 libs on x64
         Watch for the %ATTR% syscall.
         Assume user id's start above 500 and watch for %ATTR%s by them
         Watch for %ATTR%s by users without a set loginuid (4294967295/-1)
         Ensure that a key is defined for it but we aren't especially concerned
           with what it is
         Some regex foo to account for various ways this could be defined.

         A typical pattern would be:
         -a always,exit -F arch=b64 -S %ATTR% -F auid>=500 -F auid!=4294967295 -k perms
    -->
    <ind:pattern operation="pattern match">^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*-S[\s]+%ATTR%[\s]+)(?:.*-F\s+auid>=500[\s]+)(?:.*-F\s+auid!=4294967295[\s]+).*-k[\s]+[\S]+[\s]*$</ind:pattern>
    <ind:instance datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>
{{% else %}}
  <ind:textfilecontent54_test check="all" comment="audit augenrules 32-bit %ATTR%" id="test_32bit_ardm_%ATTR%_augenrules" version="1">
    <ind:object object_ref="object_32bit_ardm_%ATTR%_augenrules" />
  </ind:textfilecontent54_test>
  <ind:textfilecontent54_object id="object_32bit_ardm_%ATTR%_augenrules" version="1">
    <ind:filepath operation="pattern match">/etc/audit/rules\.d/.*\.rules</ind:filepath>
    <ind:pattern operation="pattern match">^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+%ATTR%[\s]+|([\s]+|[,])%ATTR%([\s]+|[,])))(?:.*-F\s+auid>=1000[\s]+)(?:.*-F\s+auid!=4294967295[\s]+).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$</ind:pattern>
    <ind:instance datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>

  <ind:textfilecontent54_test check="all" comment="audit augenrules 64-bit %ATTR%" id="test_64bit_ardm_%ATTR%_augenrules" version="1">
    <ind:object object_ref="object_64bit_ardm_%ATTR%_augenrules" />
  </ind:textfilecontent54_test>
  <ind:textfilecontent54_object id="object_64bit_ardm_%ATTR%_augenrules" version="1">
    <ind:filepath operation="pattern match">/etc/audit/rules\.d/.*\.rules</ind:filepath>
    <ind:pattern operation="pattern match">^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+%ATTR%[\s]+|([\s]+|[,])%ATTR%([\s]+|[,])))(?:.*-F\s+auid>=1000[\s]+)(?:.*-F\s+auid!=4294967295[\s]+).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$</ind:pattern>
    <ind:instance datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>

  <ind:textfilecontent54_test check="all" comment="audit auditctl 32-bit %ATTR%" id="test_32bit_ardm_%ATTR%_auditctl" version="1">
    <ind:object object_ref="object_32bit_ardm_%ATTR%_auditctl" />
  </ind:textfilecontent54_test>
  <ind:textfilecontent54_object id="object_32bit_ardm_%ATTR%_auditctl" version="1">
    <ind:filepath>/etc/audit/audit.rules</ind:filepath>
    <ind:pattern operation="pattern match">^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+%ATTR%[\s]+|([\s]+|[,])%ATTR%([\s]+|[,])))(?:.*-F\s+auid>=1000[\s]+)(?:.*-F\s+auid!=4294967295[\s]+).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$</ind:pattern>
    <ind:instance datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>

  <ind:textfilecontent54_test check="all" comment="audit auditctl 64-bit %ATTR%" id="test_64bit_ardm_%ATTR%_auditctl" version="1">
    <ind:object object_ref="object_64bit_ardm_%ATTR%_auditctl" />
  </ind:textfilecontent54_test>
  <ind:textfilecontent54_object id="object_64bit_ardm_%ATTR%_auditctl" version="1">
    <ind:filepath>/etc/audit/audit.rules</ind:filepath>
    <ind:pattern operation="pattern match">^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+%ATTR%[\s]+|([\s]+|[,])%ATTR%([\s]+|[,])))(?:.*-F\s+auid>=1000[\s]+)(?:.*-F\s+auid!=4294967295[\s]+).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$</ind:pattern>
    <ind:instance datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>
{{% endif %}}

</def-group>
