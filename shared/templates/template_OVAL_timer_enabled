<def-group>

{{% if init_system == "systemd" and target_oval_version >= [5, 11] %}}

  <definition class="compliance" id="timer_{{{ TIMERNAME }}}_enabled" version="1">
    <metadata>
      <title>Timer {{{ TIMERNAME }}} Enabled</title>
      <affected family="unix">
        <platform>multi_platform_all</platform>
      </affected>
      <description>The {{{ TIMERNAME }}} timer should be enabled if possible.</description>
    </metadata>
    <criteria comment="package {{{ PACKAGENAME }}} installed and timer {{{ TIMERNAME }}} is configured to start" operator="AND">
      <extend_definition comment="{{{ PACKAGENAME }}} installed" definition_ref="package_{{{ PACKAGENAME }}}_installed" />
      <criteria comment="timer {{{ TIMERNAME }}} is configured to start and is running" operator="AND">
        <criterion comment="{{{ TIMERNAME }}} is running" test_ref="test_timer_running_{{{ TIMERNAME }}}" />
        <criterion comment="multi-user.target wants {{{ TIMERNAME }}}" test_ref="test_multi_user_wants_{{{ TIMERNAME }}}" />
      </criteria>
    </criteria>
  </definition>

  <linux:systemdunitdependency_test check="all" check_existence="any_exist" comment="systemd test" id="test_multi_user_wants_{{{ TIMERNAME }}}" version="1">
    <linux:object object_ref="object_multi_user_target_for_{{{ TIMERNAME }}}_enabled" />
    <linux:state state_ref="state_systemd_{{{ TIMERNAME }}}_on"/>
  </linux:systemdunitdependency_test>
  <linux:systemdunitdependency_object id="object_multi_user_target_for_{{{ TIMERNAME }}}_enabled" comment="list of dependencies of multi-user.target" version="1">
    <linux:unit>multi-user.target</linux:unit>
  </linux:systemdunitdependency_object>
  <linux:systemdunitdependency_state id="state_systemd_{{{ TIMERNAME }}}_on" comment="{{{ TIMERNAME }}} listed at least once in the dependencies" version="1">
    <linux:dependency entity_check="at least one">{{{ TIMERNAME }}}.timer</linux:dependency>
  </linux:systemdunitdependency_state>

  <linux:systemdunitproperty_test id="test_timer_running_{{{ TIMERNAME }}}" check="at least one" check_existence="at_least_one_exists" comment="Test that the {{{ TIMERNAME }}} timer is running" version="1">
    <linux:object object_ref="obj_timer_running_{{{ TIMERNAME }}}"/>
    <linux:state state_ref="state_timer_running_{{{ TIMERNAME }}}"/>
  </linux:systemdunitproperty_test>
  <linux:systemdunitproperty_object id="obj_timer_running_{{{ TIMERNAME }}}" comment="Retrieve the ActiveState property of {{{ TIMERNAME }}}" version="1">
    <linux:unit operation="pattern match">{{{ TIMERNAME }}}\.timer</linux:unit>
    <linux:property>ActiveState</linux:property>
  </linux:systemdunitproperty_object>
  <linux:systemdunitproperty_state id="state_timer_running_{{{ TIMERNAME }}}" version="1" comment="{{{ TIMERNAME }}} is running">
      <linux:value>active</linux:value>
  </linux:systemdunitproperty_state>

{{% endif %}}

</def-group>
